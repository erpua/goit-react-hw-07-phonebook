{"version":3,"sources":["components/Form/Form.module.css","components/Contacts/Contacts.module.css","components/Section/Section.module.css","components/Filter/Filter.module.css","redux/contacts/contacts-actions.js","redux/contacts/contacts-reducer.js","redux/store.js","components/Section/Section.js","redux/contacts/contacts-selectors.js","redux/contacts/contacts-operations.js","components/Form/Form.js","components/Filter/Filter.js","components/Contacts/Contacts.js","components/Contacts/Contacts.container.js","App.js","index.js"],"names":["module","exports","fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","updateContactRequest","updateContactSuccess","updateContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","filterContacts","items","createReducer","state","payload","map","contact","id","filter","loading","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","contacts","contactsReducer","devTools","process","Section","title","children","className","s","section","getContacts","getFilter","getLoading","getTotalContacts","createSelector","length","getFilteredContacts","allContacts","normalizedFilter","toLowerCase","name","includes","axios","defaults","baseURL","Form","number","handleSubmit","e","props","onSubmit","preventDefault","originName","find","originNumber","alert","handleNameChange","target","value","setState","this","styles","form","label","labelName","info","type","placeholder","onChange","pattern","required","add","Component","connect","dispatch","item","a","post","data","addContact","Contacts","deleteContact","isLoading","fetchContacts","updateContacts","totalContacts","useEffect","useState","status","rowKey","inEditMode","setInEditMode","unitName","setUnitName","unitNumber","setUnitNumber","onSave","updateData","onCancel","link","editInput","event","save","onClick","cancel","style","marginLeft","btnContainer","edit","currentUnitName","currentUnitNumber","onEdit","delete","get","update","patch","updateContact","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.920cd7c7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__2Y2A2\",\"label\":\"Form_label__1ETKw\",\"labelName\":\"Form_labelName__aWI7G\",\"add\":\"Form_add__2Xcbs\",\"info\":\"Form_info__3PYVA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"Contacts_link__2LhPg\",\"btnContainer\":\"Contacts_btnContainer__3BqG0\",\"editInput\":\"Contacts_editInput__2M-Sm\",\"save\":\"Contacts_save__3z7ee\",\"cancel\":\"Contacts_cancel__kbWod\",\"edit\":\"Contacts_edit__2OE60\",\"delete\":\"Contacts_delete__dcUaQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__3gtJu\",\"title\":\"Section_title__28p5S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__o5LE-\"};","import { createAction } from '@reduxjs/toolkit';\n\nconst fetchContactsRequest = createAction('contacts/fetchContactsRequest');\nconst fetchContactsSuccess = createAction('contacts/fetchContactsSuccess');\nconst fetchContactsError = createAction('contacts/fetchContactsError');\n\nconst addContactRequest = createAction('contacts/addContactRequest');\nconst addContactSuccess = createAction('contacts/addContactSuccess');\nconst addContactError = createAction('contacts/addContactError');\n\nconst updateContactRequest = createAction('contacts/updateContactRequest');\nconst updateContactSuccess = createAction('contacts/updateContactSuccess');\nconst updateContactError = createAction('contacts/updateContactError');\n\nconst deleteContactRequest = createAction('contacts/deleteContactRequest');\nconst deleteContactSuccess = createAction('contacts/deleteContactSuccess');\nconst deleteContactError = createAction('contacts/deleteContactError');\n\nconst filterContacts = createAction('contacts/changeFilter');\n\nexport {\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  updateContactRequest,\n  updateContactSuccess,\n  updateContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  filterContacts,\n};\n","import { createReducer } from '@reduxjs/toolkit';\nimport { combineReducers } from 'redux';\nimport {\n  filterContacts,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  updateContactRequest,\n  updateContactSuccess,\n  updateContactError,\n} from './contacts-actions';\n\nconst items = createReducer([], {\n  [fetchContactsSuccess]: (state, { payload }) => payload,\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\n  [updateContactSuccess]: (state, { payload }) =>\n    state.map(contact => (contact.id === payload.id ? payload : contact)),\n  [deleteContactSuccess]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filter = createReducer('', {\n  [filterContacts]: (state, { payload }) => payload,\n});\n\nconst loading = createReducer(false, {\n  [fetchContactsRequest]: () => true,\n  [fetchContactsSuccess]: () => false,\n  [fetchContactsError]: () => false,\n  [addContactRequest]: () => true,\n  [addContactSuccess]: () => false,\n  [addContactError]: () => false,\n  [deleteContactRequest]: () => true,\n  [deleteContactSuccess]: () => false,\n  [deleteContactError]: () => false,\n  [updateContactRequest]: () => true,\n  [updateContactSuccess]: () => false,\n  [updateContactError]: () => false,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n  loading,\n});\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\nimport {\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\n\nimport contactsReducer from './contacts/contacts-reducer';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nconst store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nexport default store;\n","import PropTypes from 'prop-types';\nimport s from './Section.module.css';\n\nconst Section = ({ title, children }) => {\n  return (\n    <section className={s.section}>\n      <h1 className={s.title}>{title}</h1>\n      {children}\n    </section>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n};\nexport default Section;\n","import { createSelector } from '@reduxjs/toolkit';\n\nconst getContacts = state => state.contacts.items;\nconst getFilter = state => state.contacts.filter;\nconst getLoading = state => state.contacts.loading;\n\nconst getTotalContacts = createSelector(\n  [getContacts],\n  contacts => contacts.length,\n);\n\nconst getFilteredContacts = createSelector(\n  [getContacts, getFilter],\n  (allContacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n    return allContacts.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter),\n    );\n  },\n);\n\nexport {\n  getContacts,\n  getFilter,\n  getLoading,\n  getFilteredContacts,\n  getTotalContacts,\n};\n","import axios from 'axios';\nimport {\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  updateContactRequest,\n  updateContactSuccess,\n  updateContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n} from './contacts-actions';\n\naxios.defaults.baseURL = 'http://localhost:4040';\n\nconst fetchContacts = () => async dispatch => {\n  dispatch(fetchContactsRequest());\n  try {\n    const { data } = await axios.get('/contacts');\n    dispatch(fetchContactsSuccess(data));\n  } catch (error) {\n    dispatch(fetchContactsError(error));\n  }\n};\n\nconst addContact = ({ name, number }) => async dispatch => {\n  dispatch(addContactRequest());\n  const contact = { name, number };\n  try {\n    const { data } = await axios.post('/contacts', contact);\n    dispatch(addContactSuccess(data));\n  } catch (error) {\n    dispatch(addContactError(error));\n  }\n};\n\nconst updateContact = ({ name, number, id }) => async dispatch => {\n  dispatch(updateContactRequest());\n  const update = { name, number };\n  try {\n    const { data } = await axios.patch(`/contacts/${id}`, update);\n    dispatch(updateContactSuccess(data));\n  } catch (error) {\n    dispatch(updateContactError(error));\n  }\n};\n\nconst deleteContact = id => async dispatch => {\n  dispatch(deleteContactRequest());\n  try {\n    await axios.delete(`/contacts/${id}`);\n    dispatch(deleteContactSuccess(id));\n  } catch (error) {\n    dispatch(deleteContactError(error));\n  }\n};\n\nexport { addContact, deleteContact, fetchContacts, updateContact };\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { getContacts } from '../../redux/contacts/contacts-selectors';\nimport { addContact } from '../../redux/contacts/contacts-operations';\nimport styles from './Form.module.css';\nimport PropTypes from 'prop-types';\n\nexport class Form extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleSubmit = e => {\n    const { onSubmit, contacts } = this.props;\n    e.preventDefault();\n    const originName = contacts.find(\n      ({ name }) => name.toLowerCase() === this.state.name.toLowerCase(),\n    );\n    const originNumber = contacts.find(\n      ({ number }) => number === this.state.number,\n    );\n    if (originName) {\n      alert(`${this.state.name} is already used`);\n      return;\n    }\n    if (originNumber) {\n      alert(`${this.state.number} is already used`);\n      return;\n    }\n    onSubmit({ ...this.state });\n  };\n\n  handleNameChange = ({ target: { name, value } }) => {\n    this.setState({ [name]: value });\n  };\n\n  render() {\n    const { name, number } = this.state;\n    return (\n      <form className={styles.form} onSubmit={this.handleSubmit}>\n        <label className={styles.label}>\n          <span className={styles.labelName}>Name</span>\n          <input\n            className={styles.info}\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            placeholder=\"Enter your name\"\n            onChange={this.handleNameChange}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"The name can only contain letters, apostrophes, dashes and spaces.\"\n            required\n          />\n        </label>\n        <label className={styles.label}>\n          <span className={styles.labelName}>Number</span>\n          <input\n            className={styles.info}\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            placeholder=\"Enter your number\"\n            onChange={this.handleNameChange}\n            pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\n            title=\"\n            The phone number must be 11-12 digits and can contain numbers, spaces, dashes, bully brackets and can start with +\"\n            required\n          />\n        </label>\n        <button type=\"submit\" className={styles.add}>\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nForm.propTypes = {\n  onSubmit: PropTypes.func,\n};\n\nconst mapStateToProps = state => ({\n  contacts: getContacts(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onSubmit: item => dispatch(addContact(item)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Form);\n","import { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport styles from './Filter.module.css';\nimport { filterContacts } from '../../redux/contacts/contacts-actions';\nimport { getFilter } from '../../redux/contacts/contacts-selectors';\n\nconst Filter = ({ filter, onChange }) => (\n  <>\n    <input\n      className={styles.filter}\n      type=\"text\"\n      name=\"filter\"\n      value={filter}\n      onChange={onChange}\n      placeholder=\"Search name ... \"\n    />\n  </>\n);\n\nFilter.propTypes = {\n  filter: PropTypes.string,\n  onChange: PropTypes.func,\n};\n\nconst mapStateToProps = state => ({\n  filter: getFilter(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onChange: e => dispatch(filterContacts(e.target.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Contacts.module.css';\n\nconst Contacts = ({\n  contacts,\n  deleteContact,\n  isLoading,\n  fetchContacts,\n  updateContacts,\n  totalContacts,\n}) => {\n  useEffect(() => {\n    fetchContacts();\n  }, [fetchContacts]);\n\n  const [inEditMode, setInEditMode] = useState({\n    status: false,\n    rowKey: null,\n  });\n\n  const [unitName, setUnitName] = useState(null);\n  const [unitNumber, setUnitNumber] = useState(null);\n\n  const onEdit = ({ id, currentUnitName, currentUnitNumber }) => {\n    setInEditMode({\n      status: true,\n      rowKey: id,\n    });\n    setUnitName(currentUnitName);\n    setUnitNumber(currentUnitNumber);\n  };\n\n  const updateData = ({ name, number, id }) => {\n    updateContacts({ name, number, id });\n  };\n\n  const onSave = ({ name, number, id }) => {\n    const originName = contacts.find(\n      contact =>\n        contact.name.toLowerCase() === name.toLowerCase() && contact.id !== id,\n    );\n    const originNumber = contacts.find(\n      contact => contact.number === number && contact.id !== id,\n    );\n    if (originName) {\n      alert(`${name} is already used`);\n      return;\n    }\n    if (originNumber) {\n      alert(`${number} is already used`);\n      return;\n    }\n    updateData({ name, number, id });\n    onCancel();\n  };\n\n  const onCancel = () => {\n    setInEditMode({\n      status: false,\n      rowKey: null,\n    });\n    setUnitName(null);\n    setUnitNumber(null);\n  };\n\n  return (\n    <ul>\n      <p>Saved contacts {totalContacts}</p>\n      {isLoading && <h1>Downloading ...</h1>}\n      {contacts.map(({ name, number, id }) => (\n        <li key={id} className={styles.link}>\n          {inEditMode.status && inEditMode.rowKey === id ? (\n            <div>\n              <form>\n                <input\n                  className={styles.editInput}\n                  value={unitName}\n                  onChange={event => setUnitName(event.target.value)}\n                  type=\"text\"\n                  name=\"name\"\n                  title=\"The name can only contain letters, apostrophes, dashes and spaces.\"\n                  required\n                  pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                />\n                <input\n                  className={styles.editInput}\n                  type=\"tel\"\n                  value={unitNumber}\n                  name=\"number\"\n                  onChange={event => setUnitNumber(event.target.value)}\n                  title=\"The phone number must be 11-12 digits and can contain numbers, spaces, dashes, bully brackets and can start with +\"\n                  required\n                  pattern=\"[0-9]{3}-[0-9]{3}-[0-9]{4}\"\n                />\n              </form>\n\n              <button\n                className={styles.save}\n                onClick={() =>\n                  onSave({\n                    id: id,\n                    name: unitName,\n                    number: unitNumber,\n                  })\n                }\n              >\n                Save\n              </button>\n              <button\n                className={styles.cancel}\n                style={{ marginLeft: 18 }}\n                onClick={() => onCancel()}\n              >\n                Cancel\n              </button>\n            </div>\n          ) : (\n            <>\n              <p>{name}</p>\n              <p>{number}</p>\n              <div className={styles.btnContainer}>\n                <button\n                  className={styles.edit}\n                  onClick={() =>\n                    onEdit({\n                      id: id,\n                      currentUnitName: name,\n                      currentUnitNumber: number,\n                    })\n                  }\n                >\n                  Edit\n                </button>\n                <button\n                  className={styles.delete}\n                  onClick={() => deleteContact(id)}\n                >\n                  Delete\n                </button>\n              </div>\n            </>\n          )}\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nContacts.propTypes = {\n  contacts: PropTypes.arrayOf(PropTypes.object),\n  contact: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }),\n  deleteContact: PropTypes.func,\n};\n\nexport default Contacts;\n","import { connect } from 'react-redux';\nimport {\n  deleteContact,\n  fetchContacts,\n  updateContact,\n} from '../../redux/contacts/contacts-operations';\nimport Contacts from './Contacts';\nimport {\n  getFilteredContacts,\n  getLoading,\n  getTotalContacts,\n} from '../../redux/contacts/contacts-selectors';\n\nconst mapStateToProps = state => ({\n  contacts: getFilteredContacts(state),\n  isLoading: getLoading(state),\n  totalContacts: getTotalContacts(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  deleteContact: id => dispatch(deleteContact(id)),\n  fetchContacts: () => dispatch(fetchContacts()),\n  updateContacts: ({ name, number, id }) =>\n    dispatch(updateContact({ name, number, id })),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Contacts);\n","import Section from './components/Section/Section';\nimport Form from './components/Form/Form';\nimport Filter from './components/Filter/Filter';\nimport Contacts from './components/Contacts/Contacts.container';\nimport './global.css';\n\nconst App = () => {\n  return (\n    <>\n      <Section title=\"Phone book\">\n        <Form />\n      </Section>\n      <Section title=\"Contacts\">\n        <Filter />\n        <Contacts />\n      </Section>\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}